```{r setup}
library(tibble)
library(tidyr)
library(ggplot2)
library(ggdist)
library(dplyr)
library(patchwork)
library(praatpicture)
library(showtext)

font_add_google("Fira Code", "fira")

html_tag_audio <- function(file, type = c("wav")) {
  type <- match.arg(type)
  htmltools::tags$audio(
    controls = "",
    htmltools::tags$source(
      src = file,
      type = glue::glue("audio/{type}", type = type)
    )
  )
}
```


## Why only us?

::: columns
:::: {.column width=65%}

* Humans develop linguistic abilities unparalelled to non-human animals
* Some animals show certain ability to process some aspects of language [@e.g., @toro2016something]

::::
:::: {.column width=35%}
[![](assets/why-only-us.jpg){width=50%}](https://mitpress.mit.edu/9780262533492/why-only-us/)
::::
:::

::: box
**Gates to Language (GALA) ERC project (Chiara Santolin)**:

Are common mechanisms the entry gate to human language acquisition?
:::

## Syllable: a biologically meaningful linguistic unit?

* The linguistic signal is continuous, and must be **segmented** into relevant discrete units (e.g., phrases, words, syllables)
* Newborns (and adults) preferentially parse the speech signal into syllable-sized units [@bijeljac19934; @flo2022sleeping; @luo2007phase; @jusczyk1987representation; @bertoncini1988investigation]

## Syllabic structure


|Structure |Onset  |Nucleus  |Coda  |
|----------|-------|---------|------|
| CV       | t     |a        |      |
| CVC      | t     |a        |n     |
| VC       |       |a        |n     |
| V        |       |a        |      |
| CCCVCCCC |str    |e        |ŋgθs  |

## Syllabic structure

Phonotactical constraints to syllable structure vary across languages:

| Structure | Japanese  | Spanish   | Italian | English | Russian |
|-----------|-----------|-----------|---------|---------|---------|
|V          | Yes       | Yes       | Yes     | Yes     | Yes     |
|CV         | Yes       | Yes       | Yes     | Yes     | Yes     |
|VC         | Sometimes | Yes       | No      | Yes     | Yes     |
|CCV        | No        | Sometimes | No      | Yes     | Yes     |



## Syllabic structure

colpick

## Syllabic structure

plick

lpick


## Syllable: a biologically meaningful linguistic unit?

* Two linguistic universals constrain syllabic structure:
    - **Maximal Onset Principle (MOP)** (research line 1)
    - **Sonority Sequencing Principle (SSP)** (research line 2)
* Do newborns use MOP and SSP to detect syllable boundaries?
* Are these mechanisms shared with non-human animals (Long-Evants rats)?


# Maximal Onset Principle (MOP)

Research line 1: neonates, infants

## Maximal Onset Principle (MOP)

Consonants are preferably grouped at syllable onset.

- MOP-compliant: CV.CCV ("pe.klo")  
- MOP-noncompliant: CVC.CV ("pok.lo")

## Study 1: are neonates sensitive to (violations of) the MOP

### Participants

* ~50 healthy, hearing, full term neonates (power analyses pending) per experiment
* Born at the Hospital SantJoan de Déu (Barcelona, Spain) some hours ago
* Mostly Catalan and/or Spanish linguistic background

## Study 1: are newborns sensitive to (violations of) the MOP

### fNIRS setup

::: box
Estimating differences in concentration of oxy- and deoxy-hemoglobin in cortical regions of interest, as a proxy of neural activity in response to experimental manipulations.
:::

* NIRSport2 (NIRx), NIRScap
* Sampling frequency 20.345 Hz (~0.05 s samples)
* CW 760 nm & 850 nm
* 8 channels LH, 8 channels RH -> Bilateral temporal regions
* Crib testing

## Study 1: are newborns sensitive to (violations of) the MOP

### Task design (fNIRS block design)

1. Familiarisation phase (~5 minutes):
  - 10 blocks of words (20-22s silence between blocks)
  - 6 words different words in each block (0.5-1.5s silence between words)

```{r fig-task-1-familiarisation}

syllable_duration <- 0.25
word_duration <- syllable_duration * 2
boundary_duration <- 0.5
n_blocks <- 12
n_words <- 6
inter_word_silence <- sample(c(0.5, 1.5), n_words, replace = TRUE)
inter_block_silence <- sample(c(18, 22), n_blocks, replace = TRUE)

block_duration <- (n_words * word_duration) + (n_words * sum(inter_word_silence))
blocks_silences <- block_duration + inter_block_silence
blocks_onsets <- head(c(0, cumsum(blocks_silences)), -1)
blocks_offsets <- blocks_onsets + block_duration

blocks_df <- tibble(
  block = 1:n_blocks,
  xpoint = rowMeans(cbind(blocks_onsets, blocks_offsets)),
  condition = rep(c("N-Alt/MOP+", "Alt", "N-Alt/MOP-"), n_blocks / 3),
)

box_block_df <- tibble(
  xpoint = c(
    rbind(
      rep(blocks_onsets, each = 2),
      rep(blocks_offsets, each = 2)
    )
  ),
  condition = rep(
    c("N-Alt/MOP+", "Alt", "N-Alt/MOP-"),
    times = n_blocks / 3,
    each = 4
  ),
  ypoint = c(rep(c(0, 1, 1, 0), length(blocks_onsets))),
)

blocks_plot <- ggplot(
  box_block_df,
  aes(x = xpoint, y = ypoint, color = condition, group = 1),
) +
  geom_line(linewidth = 1) +
  geom_text(
    data = blocks_df,
    aes(
      x = xpoint, label = block, y = 1.2,
      color = condition
    ),
    show.legend = FALSE
  ) +
  labs(x = "Time (s)", colour = "Condition") +
  theme_ggdist() +
  theme(
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank()
  )

n_blocks_words <- 3
inter_block_silence <- sample(c(18, 22), n_blocks_words, replace = TRUE)

block_duration <- (n_words * word_duration) + (n_words * sum(inter_word_silence))
word_silences <- word_duration + inter_word_silence
word_onsets <- head(c(0, cumsum(word_silences)), -1)
word_offsets <- word_onsets + word_duration

words_df <- blocks_df <- tibble(
  word = 1:(n_words * n_blocks_words),
  xpoint = rowMeans(cbind(blocks_onsets, blocks_offsets)),
  condition = rep(c("N-Alt/MOP+", "Alt", "N-Alt/MOP-"), n_blocks / 3),
)

box_word_df <- tibble(
  xpoint = c(
    rbind(
      rep(blocks_onsets, each = 2),
      rep(blocks_offsets, each = 2)
    )
  ),
  condition = c(
    paste0("MOP+", c(1:n_words)),
    c(rbind(paste0("MOP-", 1:3), paste0("MOP+", 4:6))),
    paste0("MOP-", c(4:6))
  ),
  ypoint = c(rep(c(0, 1, 1, 0), length(blocks_onsets))),
)

words_plot <- ggplot(
  box_word_df,
  aes(x = xpoint, y = ypoint, color = condition, group = 1),
) +
  geom_line(linewidth = 1) +
  geom_text(
    data = words_df,
    aes(
      x = xpoint, label = block, y = 1.2,
      color = condition
    ),
    show.legend = FALSE
  ) +
  labs(x = "Time (s)", colour = "Condition") +
  theme_ggdist() +
  theme(
    axis.title.y = element_blank(),
    axis.ticks.y = element_blank(),
    axis.text.y = element_blank()
  )
```

## Study 1: are newborns sensitive to (violations of) the MOP

### Task design (fNIRS block design)

2. Test phase
  - 8 blocks of familiarisation words, artificially segmented (500 ms silence beetween syllables):
    * 4 non-alternating blocks: MOP-compliant syllabified words *or* MOP-noncompliant syllabified words
    * 4 alternating blocks: MOP-compliant syllabified words *and* MOP-noncompliant syllabified words
  - 6 words in each block

* Alternating/non-alternating
* 10 words per block, 0.5-1.5 s silence between words
* ~28 blocks (14 alternating, 14 non-alternating, interleaved order), 25-35 s silence between blocks



## Study 1: are newborns sensitive to (violations of) the MOP

### Stimuli

::: box
**CVCCV words**: Onset + Consonant cluster (CC) + Vowel
:::

| Follows MOP (CV.CCV) | Violates MOP (CVC.CV)|
|-------------|--------------|
|pa.kla       |pak.la        |
|ro.tri       |rot.ri        |


## Study 2: are newborns sensitive to (violations of) the MOP


### Stimuli

CV.CCV: 

- CC follows the Sonority Sequencing Principle (SSP)
- CC is phonotactical at onset in speakers' and participants' native language(s)

CVC.CV:

- C is phonotactical in coda in speakers' and participants' native language(s)

## Study 1: are newborns sensitive to (violatios of) the MOP

### Stimuli

Shortlisting words:

- Variability vs. repetition
- Generalisability


# Sonority Sequencing Principle (SSP)

Research line 2: neonates, infants, rats

## Sonority Sequencing Principle (SSP)

Syllables are predominantly a production unit: they result from a "single effort or impulse of the voice" [@whitney1874oriental].

> In a syllable, sonority increases toward the peak and decreases toward the margins [@morelli2003relative].

Most animal vocalisations follow this sonority pattern -> Evolutionary relevance -> Ancentral, inherited mechanism for perception?

```{r bran-audio}
html_tag_audio("assets/bran.wav", type = "wav")
```

```{r fig-ssp-bran}
#| label: fig-ssp-bran
#| fig-cap: "Sonority Sequencing Principle. Sonority values from @parker201149"
#| fig-height: 4
#| fig-width: 6
tribble(
  ~position, ~phoneme, ~sonority,
  "Onset", "b", 1,
  "Onset", "ɾ", 10,
  "Nucleus", "a", 17,
  "Coda", "n", 7
) |>
  mutate(phoneme = factor(phoneme, levels = phoneme, ordered = TRUE)) |>
  ggplot(aes(phoneme, sonority, fill = reorder(position, desc(position)))) +
  geom_col(colour = "white") +
  geom_line(aes(group = 1)) +
  labs(x = "Phoneme", y = "Sonority Index") +
  scale_fill_brewer(palette = "Reds") +
  theme_ggdist() +
  theme(
    legend.position = "top",
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    plot.background = element_rect(fill = NA)
  )
```

## Sonority Sequencing Principle (SSP)

```{r fig-ssp-bran-grid}
#| label: fig-sspl-bran-grid
#| fig-cap: "Sonority profile of the syllable 'bran'"
praatpicture::praatpicture(
  "assets/bran.wav",
  intensity_plotOnSpec = TRUE,
  intensity_color = RColorBrewer::brewer.pal(3, "Reds")[2],
  font.axis = 2,
  spec_colors = RColorBrewer::brewer.pal(9, "Greys")[1:7],
  font = 2,
  pitch_freqRange = c(0, 700),
  proportion = c(50, 25, 25),
  family = "fira",
  lwd = 2,
  wave_color = RColorBrewer::brewer.pal(3, "Reds")[2],
)
```

## Sonority Sequencing Principle (SSP)

```{r fig-ssp-lbif}
#| label: fig-ssp-lbif
#| fig-cap: "Sonority Sequencing Principle. Sonority values from @parker201149"
tribble(
  ~position, ~phoneme, ~sonority,
  "Onset", "l", 9,
  "Onset", "b", 1,
  "Nucleus", "i", 15,
  "Coda", "f", 3
) |>
  mutate(phoneme = factor(phoneme, levels = phoneme, ordered = TRUE)) |>
  ggplot(aes(phoneme, sonority, fill = reorder(position, desc(position)))) +
  geom_col(colour = "white") +
  geom_line(aes(group = 1)) +
  labs(x = "Phoneme", y = "Sonority Index") +
  scale_fill_brewer(palette = "Reds") +
  theme_ggdist() +
  theme(
    legend.position = "top",
    axis.title.x = element_blank(),
    legend.title = element_blank(),
    plot.background = element_rect(fill = NA)
  )
```

## Sonority Sequencing Principle (SSP)

```{r fig-ssp-lbif-grid}
#| label: fig-sspl-lbif-grid
#| fig-cap: "Sonority profile of the syllable 'lbif'"
praatpicture::praatpicture(
  "assets/lbif.wav",
  intensity_plotOnSpec = TRUE,
  intensity_color = RColorBrewer::brewer.pal(3, "Reds")[2],
  font.axis = 2,
  spec_colors = RColorBrewer::brewer.pal(9, "Greys")[1:7],
  font = 2,
  pitch_freqRange = c(0, 700),
  proportion = c(50, 25, 25),
  family = "fira",
  lwd = 2,
  wave_color = RColorBrewer::brewer.pal(3, "Reds")[2],
)
```


## Feedback/pending

## Thanks

