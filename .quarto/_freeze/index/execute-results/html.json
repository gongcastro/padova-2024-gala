{
  "hash": "271a1f7d5d17946e1b9ccc1834e051fe",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n## Why only us?\n\n::: columns\n:::: {.column width=65%}\n\n* Humans develop linguistic abilities unparalelled to non-human animals\n* Some animals show certain ability to process some aspects of language\n\n::::\n:::: {.column width=35%}\n[![](assets/why-only-us.jpg){width=50%}](https://mitpress.mit.edu/9780262533492/why-only-us/)\n::::\n:::\n\n::: box\n**Gates to Language (GALA) ERC project (Chiara Santolin)**:\n\nAre common mechanisms the entry gate to human language acquisition?\n:::\n\n## Syllable: a biologically meaningful linguistic unit?\n\n* The linguistic signal is continuous, and must be **segmented** into relevant discrete units (e.g., phrases, words, syllables)\n* Newborns (and adults) preferentially parse the speech signal into syllable-sized units [@bijeljac19934; @flo2022sleeping; @luo2007phase; @jusczyk1987representation; @bertoncini1988investigation]\n\n## Syllabic structure\n\n\n|Structure |Onset  |Nucleus  |Coda  |\n|----------|-------|---------|------|\n| CV       | t     |a        |      |\n| CVC      | t     |a        |n     |\n| VC       |       |a        |n     |\n| V        |       |a        |      |\n| CCCVCCCC |str    |e        |ŋgθs  |\n\n## Syllable structure\n\nPhonotactical constraints to syllable structure vary across languages:\n\n[INERT TABLE]\n\n\n## Syllabic structure\n\ncolpick\n\n## Syllabic structure\n\nplick\n\nlpick\n\n\n## Syllable: a biologically meaningful linguistic unit?\n\n* Two linguistic universals constrain syllabic structure:\n    - **Maximal Onset Principle (MOP)**\n    - **Sonority Sequencing Principle (SSP)**\n* Do newborns use MOP and SSP to detect syllable boundaries?\n* Are these mechanisms shared with non-human animals (Long-Evants rats)?\n\n\n# Maximal Onset Principle (MOP)\n\nResearch line 1:\n\n- Neonates\n- Infants\n\n## Maximal Onset Principle (MOP)\n\nConsonants are preferably grouped at syllable onset\n\nCCVCCV (\"prosper\"): CCV.CCV (\"pro.sper\")\n\n- MOP-compliant: CV.CCV (\"pe.klo\")  \n- MOP-noncompliant: CVC.CV (\"pok.lo\")\n\n## Study 1: are newborns sensitive to (violations of) the MOP\n\n### fNIRS device/setup\n\n## Study 1: are newborns sensitive to (violations of) the MOP\n\n### Participants\n\n## Study 1: are newborns sensitive to (violations of) the MOP\n\n### Task design\n\n* fNIRS, block design\n\n## Study 1: are newborns sensitive to (violations of) the MOP\n\n### Stimuli\n\n::: box\n**CVCCV words**: Onset + Consonant cluster (CC) + Vowel\n:::\n\n| Follows MOP (CV.CCV) | Violates MOP (CVC.CV)|\n|-------------|--------------|\n|pa.kla       |pak.la        |\n|ro.tri       |rot.ri        |\n\n\n## Study 2: are newborns sensitive to (violations of) the MOP\n\n\n### Stimuli\n\nCV.CCV: \n\n- CC follows the Sonority Sequencing Principle (SSP)\n- CC is phonotactical at onset in speakers' and participants' native language(s)\n\nCVC.CV:\n\n- C is phonotactical in coda in speakers' and participants' native language(s)\n\n## Study 1: are newborns sensitive to (violatios of) the MOP\n\n### Stimuli\n\nShortlisting words:\n\n- Variability vs. repetition\n- Generalisability\n\n\n# Sonority Sequencing Principle (SSP)\n\nResearch line 2\n\n- Neonates\n- Infants\n- Rats\n\n## Sonority Sequencing Principle (SSP)\n\nSyllables are predominantly a production unit: they result from a \"single effort or impulse of the voice\" [@whitney1874oriental].\n\n> In a syllable, sonority increases toward the peak and decreases toward the margins [@morelli2003relative].\n\nMost animal vocalisations follow this sonority pattern -> Evolutionary relevance -> Ancentral, inherited mechanism for perception?\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<audio controls=\"\">\n<source src=\"assets/bran.wav\" type=\"audio/wav\"/>\n</audio>\n```\n\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![Sonority Sequencing Principle. Sonority values from @parker201149](index_files/figure-revealjs/fig-ssp-bran-1.png){#fig-ssp-bran width=4800}\n:::\n:::\n\n\n\n## Sonority Sequencing Principle (SSP)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Sonority profile of the syllable 'bran'](index_files/figure-revealjs/fig-sspl-bran-grid-1.png){#fig-sspl-bran-grid width=8000}\n:::\n:::\n\n\n\n## Sonority Sequencing Principle (SSP)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Sonority Sequencing Principle. Sonority values from @parker201149](index_files/figure-revealjs/fig-ssp-lbif-1.png){#fig-ssp-lbif width=8000}\n:::\n:::\n\n\n\n## Sonority Sequencing Principle (SSP)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Sonority profile of the syllable 'lbif'](index_files/figure-revealjs/fig-sspl-lbif-grid-1.png){#fig-sspl-lbif-grid width=8000}\n:::\n:::\n\n\n\n\n## Feedback/pending\n\n## Thanks\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}